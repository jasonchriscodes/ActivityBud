{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetaledHeader.tsx","features/activities/details/ActivityDetails.tsx","app/common/form/MyTextInput.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","features/errors/ValidationErrors.tsx","features/errors/TestError.tsx","features/users/LoginForm.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/profiles/Profile.Activities.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/common/modals/ModalContainer.tsx","app/layout/NavBar.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowng","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAcccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","vertical","size","style","width","marginTop","Header","icon","attached","color","Item","active","has","onClick","onChange","Reveal","animated","Content","visible","Button","fluid","hidden","basic","e","preventDefault","handleFollow","Card","as","Link","to","Image","src","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","LoadingComponent","inverted","Dimmer","border","onSubmit","resetForm","initialValues","validationSchema","Yup","required","isSubmitting","isValid","handleSubmit","className","props","position","placeholder","rows","field","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","relaxed","divided","ribbon","Extra","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","useParams","MyTextInput","useField","meta","Form","Field","touched","label","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","text","MyDateInput","selected","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","dirty","autoComplete","placeholderText","showTimeSelect","timeCaption","dateFormat","positive","type","NotFound","Inline","primary","Container","message","ValidationErrors","Message","err","i","TestErrors","setErrors","widths","baseUrl","email","password","render","alt","isLoggedIn","Divider","panes","menuItem","pane","Tab","Pane","menu","pointing","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","setEditMode","isCurrentUser","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","avatar","Statistic","Modal","onClose","fixed","NavLink","exact","header","marginRight","spaced","Dropdown","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4f1b2d58.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize = 2;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { PaginatedResult } from \"../models/pagination\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        } else {\n          toast.error(data);\n        }\n        break;\n      case 401:\n        toast.error(\"unauthorised\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\n      .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    requests.post<void>(\"/activities\", activity),\n  update: (activity: ActivityFormValues) =>\n    requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) =>\n    requests.post<User>(\"/account/register\", user),\n  fbLogin: (accessToken: string) =>\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) =>\n    requests.put(`/profiles`, profile),\n  updateFollowing: (username: string) =>\n    requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(\n      `/profiles/${username}/activities?predicate=${predicate}`\n    ),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n    id: string;\n    title: string;\n    date: Date | null;\n    description: string;\n    category: string;\n    city: string;\n    venue: string;\n    hostUsername: string;\n    isCancelled: boolean;\n    isGoing: boolean;\n    isHost: boolean;\n    host?: Profile;\n    attendees: Profile[]\n  }\n\n  export class Activity implements Activity {\n    constructor(init?: ActivityFormValues) {\n      Object.assign(this, init);\n    }\n  }\n\n  export class ActivityFormValues {\n    id?: string = undefined;\n    title: string = '';\n    category: string = '';\n    description: string = '';\n    date: Date | null = null;\n    city: string = '';\n    venue: string = '';\n\n    constructor(activity?: ActivityFormValues) {\n      if (activity) {\n        this.id = activity.id;\n        this.title = activity.title;\n        this.category = activity.category;\n        this.description = activity.description;\n        this.date = activity.date;\n        this.venue = activity.venue;\n        this.city = activity.city;\n      }\n    }\n  }","import { User } from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") this.predicate.delete(key);\n      });\n    };\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(\n              (a) => a.username !== user?.username\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled =\n          !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowng = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followersCount--\n            : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { UserActivity } from \"./../models/profile\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.uploading = false;\r\n      });\r\n    }\r\n  };\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n        console.log(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos = this.profile.photos.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n        console.log(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowng(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n  fbAcccessToken: string | null = null;\n  fbLoading = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  };\n\n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus((response) => {\n      if (response.status === \"connected\") {\n        this.fbAcccessToken = response.authResponse.accessToken;\n      }\n    });\n  };\n\n  facebookLogin = () => {\n    this.fbLoading = true;\n    const apiLogin = (accessToken: string) => {\n      agent.Account.fbLogin(accessToken)\n        .then((user) => {\n          store.commonStore.setToken(user.token);\n          runInAction(() => {\n            this.user = user;\n            this.fbLoading = false;\n          });\n          history.push(\"/activities\");\n        })\n        .catch((error) => {\n          console.log(error);\n          runInAction(() => (this.fbLoading = false));\n        });\n    };\n    if (this.fbAcccessToken) {\n      apiLogin(this.fbAcccessToken);\n    } else {\n      window.FB.login(\n        (response) => {\n          apiLogin(response.authResponse.accessToken);\n        },\n        { scope: \"public_profile,email\" }\n      );\n    }\n  };\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n    error: ServerError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token)\n                } else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        )\n    }\n    \n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection: \", error)\r\n        );\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\"); // adding Z to make it UTC\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment); // place comment at the start of the list\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping the connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activites\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\n    }\n  }\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({\n  attendees,\n}: Props) {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Cancelled\"\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n    const { activityStore } = useStore();\n    const { groupedActivities } = activityStore;\n\n    return (\n        <>\n            {groupedActivities.map(([group, activities]) => (\n                <Fragment key={group}>\n                    <Header sub color='teal'>\n                        {group}\n                    </Header>\n                    {activities.map(activity => (\n                        <ActivityListItem key={activity.id} activity={activity} />\n                    ))}\n                </Fragment>\n            ))}\n        </>\n\n    )\n})","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\n    activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content} />\n        </Dimmer>\n    )\n}","import { formatDistanceToNow } from \"date-fns\";\nimport { Field, FieldProps, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Comment, Header, Loader, Segment } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { useStore } from \"../../../app/stores/store\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => commentStore.clearComments();\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + Enter for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Segment, Grid, Icon } from 'semantic-ui-react'\nimport { Activity } from \"../../../app/models/activity\";\nimport {format} from 'date-fns';\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='teal' name='info' />\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='teal' />\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <span>\n                            {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n                        </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='teal' />\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Image, Item, Label, List, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from 'date-fns';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n    const { activityStore: { updateAttendance, loading, cancelActivityToggle } } = useStore();\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{ padding: '0' }}>\n                {activity.isCancelled &&\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\n                        ribbon color='red' content='Cancelled' />\n                }\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{ color: 'white' }}\n                                />\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {activity.isHost ? (\n                    <>\n                        <Button\n                            color={activity.isCancelled ? 'green' : 'red'}\n                            floated='left'\n                            basic\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n                            onClick={cancelActivityToggle}\n                            loading={loading}\n                        />\n                        <Button as={Link}\n                            disabled={activity.isCancelled}\n                            to={`/manage/${activity.id}`}\n                            color='orange'\n                            floated='right'>\n                            Manage Event\n                        </Button>\n                    </>\n\n                ) : activity.isGoing ? (\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n                ) : (\n                    <Button disabled={activity.isCancelled}\n                        loading={loading} onClick={updateAttendance} color='teal'>\n                            Join Activity\n                    </Button>\n                )}\n            </Segment>\n        </Segment.Group>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\nimport ActivityDetailedHeader from \"./ActivityDetaledHeader\";\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n    const [field, meta] = useField(props.name); \n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    rows: number;\n    label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n    const [field, meta] = useField(props.name); \n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <textarea {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n    const [field, meta, helpers] = useField(props.name); \n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <Select \n                clearable\n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","export const categoryOptions = [\n    {text: 'Drinks', value: 'drinks'},\n    {text: 'Culture', value: 'culture'},\n    {text: 'Film', value: 'film'},\n    {text: 'Food', value: 'food'},\n    {text: 'Music', value: 'music'},\n    {text: 'Travel', value: 'travel'},\n]","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n    const [field, meta, helpers] = useField(props.name!); \n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <DatePicker \n                {...field}\n                {...props}\n                selected={(field.value && new Date(field.value)) || null}\n                onChange={value => helpers.setValue(value)}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport { v4 as uuid } from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport { ActivityFormValues } from '../../../app/models/activity';\n\nexport default observer(function ActivityForm() {\n    const history = useHistory();\n    const { activityStore } = useStore();\n    const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\n    const { id } = useParams<{ id: string }>();\n\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n    const validationSchema = Yup.object({\n        title: Yup.string().required('The activity title is required'),\n        description: Yup.string().required('The activity description is required'),\n        category: Yup.string().required(),\n        date: Yup.string().required('Date is required').nullable(),\n        venue: Yup.string().required(),\n        city: Yup.string().required(),\n    })\n\n    useEffect(() => {\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\n    }, [id, loadActivity]);\n\n    function handleFormSubmit(activity: ActivityFormValues) {\n        if (!activity.id) {\n            let newActivity = {\n                ...activity,\n                id: uuid()\n            };\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\n        } else {\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\n        }\n    }\n\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\n\n    return (\n        <Segment clearing>\n            <Header content='Activity Details' sub color='teal' />\n            <Formik \n                validationSchema={validationSchema}\n                enableReinitialize \n                initialValues={activity} \n                onSubmit={values => handleFormSubmit(values)}>\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                        <MyTextInput name='title' placeholder='Title' />\n                        <MyTextArea rows={3} placeholder='Description' name='description' />\n                        <MySelectInput options={categoryOptions} placeholder='Category'  name='category' />\n                        <MyDateInput \n                            placeholderText='Date'  \n                            name='date' \n                            showTimeSelect\n                            timeCaption='time'\n                            dateFormat='MMMM d, yyyy h:mm aa'\n                        />\n                        <Header content='Location Details' sub color='teal' />\n                        <MyTextInput placeholder='City'  name='city' />\n                        <MyTextInput placeholder='Venue' name='venue' />\n                        <Button \n                            disabled={isSubmitting || !dirty || !isValid}\n                            loading={isSubmitting} floated='right' \n                            positive type='submit' content='Submit' />\n                        <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\n                    </Form>\n                )}\n            </Formik>\n\n        </Segment>\n    )\n})","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function ServerError() {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\n            {commonStore.error?.details &&\n                <Segment>\n                    <Header as='h4' content='Stack trace' color='teal' />\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n                </Segment>\n                \n            }\n        </Container>\n    )\n})","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props) {\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function LoginForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \n                setErrors({error: 'Invalid email or password'}))}\n        >\n            {({handleSubmit, isSubmitting, errors}) => (\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Login to ActivityBud' color='teal' textAlign='center' />\n                    <MyTextInput name='email' placeholder='Email' />\n                    <MyTextInput name='password' placeholder='Password' type='password' />\n                    <ErrorMessage \n                        name='error' render={() => \n                        <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\n                    />\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n                </Form>\n            )}\n        </Formik>\n    )\n})","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../errors/ValidationErrors';\n\nexport default observer(function RegisterForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \n                setErrors({error}))}\n            validationSchema={Yup.object({\n                displayName: Yup.string().required(),\n                username: Yup.string().required(),\n                email: Yup.string().required().email(),\n                password: Yup.string().required(),\n            })}\n        >\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Sign up to ActivityBud' color='teal' textAlign='center' />\n                    <MyTextInput name='displayName' placeholder='Display Name' />\n                    <MyTextInput name='username' placeholder='Username' />\n                    <MyTextInput name='email' placeholder='Email' />\n                    <MyTextInput name='password' placeholder='Password' type='password' />\n                    <ErrorMessage \n                        name='error' render={() => \n                        <ValidationErrors errors={errors.error}/>}\n                    />\n                    <Button disabled={!isValid || !dirty || isSubmitting} \n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\n                </Form>\n            )}\n        </Formik>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Header,\n  Segment,\n  Image,\n  Button,\n  Divider,\n} from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          ActivityBud\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to ActivityBud\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Login!\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Register!\n            </Button>\n            <Divider horizontal inverted>\n              Or\n            </Divider>\n            <Button\n              loading={userStore.fbLoading}\n              size=\"huge\"\n              inverted\n              color=\"facebook\"\n              content=\"Login with Facebook\"\n              onClick={userStore.facebookLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: \"200px\",\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n     <Icon name='upload' size='huge'/>\r\n     <Header content='Drop image here'/>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => {\r\n        uploadPhoto(blob!);\r\n      });\r\n    }\r\n  }\r\n\r\n  // clean dropzone files\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => {\r\n        URL.revokeObjectURL(file.preview);\r\n      });\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivities from \"./Profile.Activities\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile..\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ModalContainer() {\n    const {modalStore} = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} exact to=\"/\" header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          ActivityBud\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image\n            src={user?.image || \"/assets/user.png\"}\n            avatar\n            spaced=\"right\"\n          />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Container } from \"semantic-ui-react\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport NavBar from \"./NavBar\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}